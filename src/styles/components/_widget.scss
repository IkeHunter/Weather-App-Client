
@mixin widgetRows($count) {
  grid-template-rows: repeat($count, 200px);
}
.widget-container {
  display: grid;
  grid-template-columns: repeat(9, [col-start] 1fr);
  gap: $widget-space;
  padding-left: 1fr;
}
.widget {
/**=====
Widget Component

Define widget size as col-row, with col being two standard columns
*/

  box-shadow: $box-shadow;
  border-radius: $border-radius;
  padding: $widget-space;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
  overflow: hidden;

  &-3-1 {
    grid-column: span 3;
    grid-row: span 1;

  }
  &-3-3 {
    grid-column: span 3;
    grid-row: span 3;
  }
  &-2-2 {
    grid-column: span 2;
    grid-row: span 2;
  }
  &-1-1 {
    grid-column: span 2;
    grid-row: span 1;
  }


  &__summary {
    display: flex;
    justify-content: space-between;
    align-items: center;


    &__block {
      display: flex;
      flex-direction: column;

      .data-font {
        color: $medium-blue;
      }
    }

  }


  &__table {
    display: grid;
    grid-template-columns: repeat(1, 1fr);

    table {
      border-collapse: collapse;
    }

    tr:has(th) {
      display: none;
    }
    tr {
      border-top: 1px solid $light-grey;
    }
    td {
      padding: 3px 0;
    }
  }

  &__cta {

    &::before {
      content: "";
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      width: 100%;
      height: 1px;
      border-top: 1px solid $light-grey;
    }

     a {
      font-family: 'Roboto', sans-serif;
      font-style: normal;
      font-weight: 400;
      font-size: 12px;
      line-height: 14px;

      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;

      color: $light-blue;

      padding-top: $widget-space;
     }

     span {
      font-size: 19px;
      font-weight: bold;
     }
  }

  &__control {
    h4 {
      display: inline-block;
    }
  }


}


